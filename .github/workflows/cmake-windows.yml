name: Build Windows Client
run-name: Build Windows Client

on:
  push:
    branches: [ "main" ]
    paths:
      - 'Wasm-client/src/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'Wasm-client/src/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/Wasm-client/build" >> "$GITHUB_OUTPUT"
        echo "install-output-dir=${{ github.workspace }}/Wasm-client/install" >> "$GITHUB_OUTPUT"

    - name: Install ninja
      shell: cmd
      run: |
        choco install ninja
        echo C:\ProgramData\chocolatey\lib\ninja\tools >> %GITHUB_PATH%

    - name: Cache Protobuf build directory
      id: cache-protobuf
      uses: actions/cache@v4
      with:
        path: ${{ steps.strings.outputs.build-output-dir }}/src/submodules/protobuf/
        key: protobuf-windows-build

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -G "Ninja"
        -DCMAKE_CXX_COMPILER=cl
        -DCMAKE_C_COMPILER=cl
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_MAKE_PROGRAM=C:\ProgramData\chocolatey\lib\ninja\tools\ninja.exe
        -S ${{ github.workspace }}/Wasm-client

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release

    - name: Install
      run: cmake --install ${{ steps.strings.outputs.build-output-dir }} --prefix ${{ steps.strings.outputs.install-output-dir }} --component shutter

    - uses: actions/upload-artifact@v4
      with:
        name: ShutterController-win-x64
        path: ${{ steps.strings.outputs.install-output-dir }}
